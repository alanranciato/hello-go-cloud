steps:
- name: 'gcr.io/cloud-builders/go'
  id: Install Go
  args: ['install', '.']
  env: ['PROJECT_ROOT=hello-go-cloud']
- name: 'gcr.io/cloud-builders/go'
  id: Build
  args: ['build', 'hello-go-cloud']
  env: ['PROJECT_ROOT=hello-go-cloud']
- name: 'gcr.io/cloud-builders/go'
  id: Test
  args: ['test']
  env: ['PROJECT_ROOT=hello-go-cloud']
- name: 'gcr.io/cloud-builders/docker'
  id: Container Build 
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:$SHORT_SHA'
  - '.'
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:$SHORT_SHA'
  env:
  - 'PROJECT_ID=$PROJECT_ID'
- name: 'gcr.io/cloud-builders/gcloud'
  id: GKE Create QA
  args: ["container", "clusters", "create", "hello-go-cloud-$BRANCH_NAME-$SHORT_SHA", "--zone=us-central1-a", "--enable-network-policy", "--subnetwork=default"]
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Deploy QA
#  entrypoint: 'bash'
#  args:
#  - echo deploying
- name: 'gcr.io/cloud-builders/gcloud'
  id: GKE Destroy QA
  args: ["container", "clusters", "delete", "hello-go-cloud-$BRANCH_NAME-$SHORT_SHA", "--zone=us-central1-a", "--enable-network-policy", "--subnetwork=default"]
