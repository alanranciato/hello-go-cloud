steps:
- name: 'gcr.io/cloud-builders/go'
  id: Install Go
  args: ['install', '.']
  env: ['PROJECT_ROOT=hello-go-cloud']
  volumes:
  - name: 'vol1'
    path: '/code_persist'
- name: 'gcr.io/cloud-builders/go'
  id: Build
  args: ['build', 'hello-go-cloud']
  env: ['PROJECT_ROOT=hello-go-cloud']
- name: 'gcr.io/cloud-builders/go'
  id: Test
  args: ['test']
  env: ['PROJECT_ROOT=hello-go-cloud']
- name: 'gcr.io/cloud-builders/docker'
  id: Container Build 
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:$SHORT_SHA'
  - '-t'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:latest'
  - '.'
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:$SHORT_SHA'
  env:
  - 'PROJECT_ID=$PROJECT_ID'
- name: 'gcr.io/cloud-builders/gcloud'
  id: GKE Create QA
  entrypoint: 'bash'
  args:
  - '-c'
  - | 
    [[ "$BRANCH_NAME" != "master" ]] && gcloud container clusters create hello-go-cloud-$BRANCH_NAME-$SHORT_SHA --zone=us-central1-a --enable-network-policy --subnetwork=default || echo 'cluster already created'
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'apply' 
  - '-R' 
  - '-f'
  - 'k8s/'
  volumes:
  - name: 'vol1'
    path: '/code_persist'
- name: 'ubuntu'
  id: 'Break Time'
  args: ['sleep', '150']
  timeout: 600
  waitFor: 
  - 'GKE Create QA'
- name: 'gcr.io/cloud-builders/gcloud'
  id: GKE Destroy QA
  entrypoint: 'bash'
  args:
  - '-c'
  - | 
    [[ "$BRANCH_NAME" == "master" ]] && gcloud container clusters delete hello-go-cloud-$BRANCH_NAME-$SHORT_SHA --zone=us-central1-a  --quiet || echo 'No Cluster Exists to delete'
  waitFor:
  - 'Break Time'
images: 
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:$SHORT_SHA'
  - 'gcr.io/$PROJECT_ID/hello-go-cloud:latest'
